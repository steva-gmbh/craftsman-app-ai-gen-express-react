generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Customer {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  phone         String?
  address       String?
  billingAddress String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  jobs          Job[]
  projects      Project[]
  invoices      Invoice[]
}

model Job {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  status      String        @default("pending")
  price       Float?
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  customer    Customer      @relation(fields: [customerId], references: [id])
  customerId  Int
  project     Project?      @relation(fields: [projectId], references: [id])
  projectId   Int?
  materials   JobMaterial[]
  tools       JobTool[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  settings  Settings?
}

model Settings {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  user           User     @relation(fields: [userId], references: [id])
  profile        String?
  business       String?
  billing        String?
  notifications  String?
  appearance     String?
  pagination     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Material {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  unit        String        // e.g., kg, l, m, pcs
  costPerUnit Float
  color       String?
  brand       String?
  supplier    String?
  category    String        // e.g., paint, wood, metal, tools
  stock       Int           @default(0)
  minStock    Int           @default(0)
  location    String?       // storage location
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  jobs        JobMaterial[]
}

model JobMaterial {
  id          Int      @id @default(autoincrement())
  job         Job      @relation(fields: [jobId], references: [id])
  jobId       Int
  material    Material @relation(fields: [materialId], references: [id])
  materialId  Int
  amount      Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([jobId, materialId])
}

model Tool {
  id            Int        @id @default(autoincrement())
  name          String
  description   String?
  category      String
  brand         String?
  model         String?
  purchaseDate  DateTime?
  purchasePrice Float?
  location      String?
  notes         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  jobs          JobTool[]
}

model JobTool {
  id        Int      @id @default(autoincrement())
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     Int
  tool      Tool     @relation(fields: [toolId], references: [id])
  toolId    Int
  amount    Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([jobId, toolId])
}

model Project {
  id           Int       @id @default(autoincrement())
  name         String
  description  String
  status       String    @default("active")
  budget       Float?
  startDate    DateTime?
  endDate      DateTime?
  customer     Customer  @relation(fields: [customerId], references: [id])
  customerId   Int
  jobs         Job[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  invoice      Invoice?  @relation(fields: [invoiceId], references: [id])
  invoiceId    Int?
}

model Invoice {
  id              Int       @id @default(autoincrement())
  invoiceNumber   String    @unique
  issueDate       DateTime  @default(now())
  dueDate         DateTime
  status          String    @default("draft") // draft, sent, paid, overdue, cancelled
  totalAmount     Float
  taxRate         Float     @default(0)
  taxAmount       Float
  notes           String?
  customer        Customer  @relation(fields: [customerId], references: [id])
  customerId      Int
  projects        Project[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Vehicle {
  id              Int       @id @default(autoincrement())
  name            String
  make            String
  model           String
  year            Int
  licensePlate    String?
  vin             String?   @unique
  color           String?
  type            String    // car, truck, van, etc.
  status          String    @default("active") // active, maintenance, retired
  purchaseDate    DateTime?
  purchasePrice   Float?
  mileage         Int?
  fuelType        String?
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Template {
  id          Int       @id @default(autoincrement())
  type        String    // "invoice", etc.
  title       String
  description String?
  body        String    // HTML template content
  isDefault   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
} 